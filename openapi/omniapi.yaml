openapi: 3.0.3
servers:
  - url: 'https://staging-omni.stamps.id'
info:
  description: >-
    This is a sample server Petstore server.  You can find out more about
    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key
    `special-key` to test the authorization filters.
  version: 1.0.0
  title: Overview
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Introduction
    description: 
      $ref: '../developer-portal/intro.md'
  - name: Inventory
    description: Inventory settings and modifications
  - name: Group
    description: Group settings and modifications
  - name: Order
    description: Order settings and modifications
  - name: Product and Variant
    description: Product and Variant settings and modifications
  - name: Modifier
    description: Modifier settings 
  - name: Handling Errors
    description: 
      $ref: '../developer-portal/handling-errors.md'
paths:
  /api/backend/inventories/update:
    post:
      tags:
        - Inventory
      summary: Add / Update Inventory
      description: ''
      operationId: addInventory
      responses:
        '200':
          description: OK
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#inventory)
      security:
        - Stamps_APIToken: []
      requestBody:
        $ref: '#/components/requestBodies/AddInventory'
  /api/backend/inventories/update-out-of-stock:
    post:
      tags:
        - Inventory
      summary: Update Out of Stock Inventory
      description: ''
      operationId: updateInventory
      responses:
        '200':
          description: OK
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#inventory)
      security:
        - Stamps_APIToken: []
      requestBody:
        $ref: '#/components/requestBodies/OosInventory'
  /api/backend/inventories/aggregator-settings/update:
    post:
      tags:
        - Inventory
      summary: Add / Update Inventory Aggregator Settings
      description: Multiple status values can be provided with comma separated strings
      operationId: addInventorySettings
      responses:
        '200':
          description: OK
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#inventory)
      security:
        - Stamps_APIToken: []
      requestBody:
        $ref: '#/components/requestBodies/InventorySettings'
  /api/backend/groups/update:
    post:
      tags:
        - Group
      summary: Add / Update Group
      description: Returns a map of status codes to quantities
      operationId: addGroup
      responses:
        '200':
          description: OK
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#group)
      security:
        - Stamps_APIToken: []
      requestBody:
        $ref: '#/components/requestBodies/AddGroup'
  /api/backend/groups/aggregator-settings/update:
    post:
      tags:
        - Group
      summary: Add / Update Group Aggregator Settings
      description: ''
      operationId: addGroupSettings
      responses:
        '200':
          description: OK
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#group)
      security:
        - Stamps_APIToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupSettings'
  /api/store/orders/get:
    get:
      tags:
        - Order
      summary: Get Order
      description: This can only be done by the logged in user.
      operationId: getOrder
      responses:
        '200':
          description: successful operation
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#order)
      security:
        - Stamps_APIToken: []
  /api/store/orders/details:
    get:
      tags:
        - Order
      summary: Get Order Details
      description: ''
      operationId: getOrderDetails
      responses:
        '200':
          description: successful operation
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#order)
      security:
        - Stamps_APIToken: []
  /api/store/orders/paid:
    post:
      tags:
        - Order
      summary: Paid Order
      description: ''
      operationId: paidOrder
      responses:
        '200':
          description: successful operation
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#order)
      security:
        - Stamps_APIToken: []
      requestBody:
        $ref: '#/components/requestBodies/Orders'
  /api/store/orders/complete:
    post:
      tags:
        - Order
      summary: Complete Order
      description: ''
      operationId: completeOrder
      responses:
        '200':
          description: OK
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#order)
      security:
        - Stamps_APIToken: []
      requestBody:
        $ref: '#/components/requestBodies/CompleteOrder'
  /api/store/orders/confirm:
    post:
      tags:
        - Order
      summary: Confirm Order
      description: ''
      operationId: confirmOrder
      responses:
        '200':
          description: successful operation
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#order)
      security:
        - Stamps_APIToken: []
      requestBody:
        $ref: '#/components/requestBodies/Orders'
  /api/store/orders/cancel:
    post:
      tags:
        - Order
      summary: Cancel Order
      description: ''
      operationId: cancelOrder
      responses:
        '200':
          description: OK
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#order)
      security:
        - Stamps_APIToken: []
      requestBody:
        $ref: '#/components/requestBodies/Orders'
  /api/mobile/orders/add:
    post:
      tags:
        - Order
      summary: Add Order
      description: This can only be done by the logged in user.
      operationId: addOrder
      responses:
        '200':
          description: OK
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#order)
      security:
        - Stamps_APIToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrder'
        description: Updated user object
        required: true
  /api/backend/products/update:
    post:
      tags:
        - Product and Variant
      summary: Add / Update Product & Variant
      description: This can only be done by the logged in user.
      operationId: addProduct
      responses:
        '200':
          description: OK
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#product-and-variant)
      security:
        - Stamps_APIToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProduct'
        description: Updated user object
        required: true
  /api/backend/products/variants/aggregator-settings/update:
    post:
      tags:
        - Product and Variant
      summary: Add / Update Variant Aggregator Settings
      description: This can only be done by the logged in user.
      operationId: addVariantSettings
      responses:
        '200':
          description: OK
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#product-and-variant)
      security:
        - Stamps_APIToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariantSettings'
  /api/backend/groups/set-variants:
    post:
      tags:
        - Product and Variant
      summary: Add / Update Variant Group
      description: This can only be done by the logged in user.
      operationId: addVariantGroup
      responses:
        '200':
          description: OK
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#product-and-variant)
      security:
        - Stamps_APIToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddVariant'
  /api/backend/modifier-groups/aggregator-settings/update:
    post:
      tags:
        - Modifier
      summary: Add / Update Modifier Aggregator Settings
      description: This can only be done by the logged in user.
      operationId: addModifierSettings
      responses:
        '200':
          description: OK
        '400':
          description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#modifier)
      security:
        - Stamps_APIToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddModifier'
  # /api/backend/modifier-groups/aggregator-settings/error:
  #   post:
  #     tags:
  #       - Handling Errors
  #     summary: Add / Update Modifier Aggregator Settings
  #     description: This can only be done by the logged in user.
  #     operationId: Handling error
  #     responses:
  #       '200':
  #         description: OK
  #       '400':
  #         description: You will get a pair of `error_code` and `error_message`. [Handling Errors](/developer-portal/handling-errors/#modifier)
  #     security:
  #       - Stamps_APIToken: []
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/AddModifier'
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  responses:
    PetResponse:
      description: successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AddInventory'
  requestBodies:
    AddInventory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddInventory'
      description: ""
      required: true
    OosInventory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OosInventory'
    InventorySettings:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InventorySettings'
    AddGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddGroup'
    Orders:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Orders'
    CompleteOrder:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompleteOrder'
    AddOrder: 
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/AddOrder'
  securitySchemes:
    Stamps_APIToken:
      description: API Token Provided by Stamps, please contact Stamps if you have not received your token.
      type: apiKey
      name: PRIVATE-TOKEN
      in: header
  schemas:
    AddProduct:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        display_name:
          type: string
        short_description:
          type: string
        description:
          type: string
        markdown_description:
          type: string
        position:
          type: number
        inventory_enabled:
          type: boolean
    GetOrder:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          format: int32
          description: User Status
    Inventories:
      type: object
      properties:
        variant_code:
          type: string
        price:
          type: number
        out_of_stock: 
          type: boolean
        is_active: 
          type: boolean
    AddInventory:
      type: object
      properties:
        store_code:
          type: string
        inventories:
          $ref: '#/components/schemas/Inventories'
    OosInventory: 
      type: object
      properties:
        store: 
          type: string
        code: 
          type: string
        out_of_stock:
          type: boolean
    InventorySettings: 
      type: object
      properties:
        is_active:  
          type: boolean
        variant_code: 
          type: string
        price:
          type: integer
        discounted_price:
          type: number
    AddGroup: 
      type: object
      properties:
        code:  
          type: string
        name: 
          type: string
        parent:
          type: string
        is_active:
          type: boolean
    GroupSettings:
      type: object
      properties:
        group:
          type: string
        is_active:
          type: boolean
        type:
          type: integer
        name:
          type: string
        position:
          type: integer
        description:
          type: string
        aggregator_category_id:
          type: string
    VariantSettings:
      type: object
      properties:
        is_active:
          type: boolean
        variant_code:
          type: string
        type:
          type: integer
        code:
          type: string
        sku:
          type: string
        name:
          type: string
        position:
          type: integer
        default_price:
          type: number
        description:
          type: string
    AddVariant:
      type: object
      properties:
        code:
          type: string
        sku:
          type: string
        name: 
          type: string
        display_name:
          type: string
        description:
          type: string
        markdown_description:
          type: string
        groups:
          type: string
        position:
          type: number
        dimension:
          type: string
        extra_data:
          type: string
    AddModifier:
      type: object
      properties:
        is_active: 
          type: boolean
        position:
          type: integer
    Orders:
      type: object
      properties:
        order: 
          type: string
    CompleteOrder:
      type: object
      properties:
        order: 
          type: string
        receiver_name:
          type: string
        received_time:
          type: string
        payment_method:
          type: integer
    AddOrder:
      type: object
      properties:
        notes: 
          type: string
        payment_method:
          type: integer
        channel:
          type: integer
        type:
          type: integer
        queue_number:
          type: string
        table_number:
          type: string
        status:
          type: string
